{"version":3,"sources":["Contact/helpers.js","Contact/Contact.js","Contacts/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["getGenderIcon","gender","icon","faMars","faVenus","faGenderless","Contact","props","firstName","lastName","className","contacts","phone","Contacts","useState","search","setSearch","filteredContacts","setFilteredContacts","male","female","genderless","genderChecklist","setGenderChecklist","handleGenderChecklistUpdate","genderToToggle","useEffect","result","filter","searchValue","toLowerCase","includes","faPlus","color","type","placeholder","value","onChange","e","target","name","checked","map","contact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4f165b8.chunk.js","sourcesContent":["import { faGenderless, faMars, faVenus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const getGenderIcon = (gender) => {\r\n    switch (gender) {\r\n        case 'male':\r\n            return < FontAwesomeIcon icon={faMars} />\r\n        case 'female':\r\n            return < FontAwesomeIcon icon={faVenus} />\r\n        default:\r\n            return < FontAwesomeIcon icon={faGenderless} />\r\n    }\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { getGenderIcon } from \"./helpers.js\"\r\n\r\nexport default function Contact(props) {\r\n    const { firstName, lastName, gender } = props;\r\n    \r\n    return (\r\n        <li className=\"contact\">\r\n            <span>{firstName} {lastName}</span>\r\n\r\n            <div className=\"gender\">{getGenderIcon(gender)}</div>\r\n        </li>\r\n    )\r\n}","import React, {useState, useEffect } from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport \"./styles.css\";\r\n\r\nconst contacts = [{\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовський\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Робін\",\r\n    lastName: \"Щербатська\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Анонімний\",\r\n    lastName: \"Анонімус\",\r\n    phone: \"+380666666666\"\r\n}, {\r\n    firstName: \"Лілія\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Маршен\",\r\n    lastName: \"Еріксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбес\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}];\r\n\r\nfunction Contacts() {\r\n    const [search, setSearch] = useState('');\r\n    const [filteredContacts, setFilteredContacts] = useState(contacts);\r\n    const [genderChecklist, setGenderChecklist] = useState({\r\n        male: true,\r\n        female: true,\r\n        genderless: true,\r\n    });\r\n\r\n    const handleGenderChecklistUpdate = (genderToToggle) => {\r\n        setGenderChecklist({\r\n            ...genderChecklist,\r\n            [genderToToggle]: !genderChecklist[genderToToggle],\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = contacts.filter(({ lastName, firstName, phone, gender }) => {\r\n            const searchValue = search.toLowerCase();\r\n\r\n            return (\r\n                lastName.toLowerCase().includes(searchValue) ||\r\n                firstName.toLowerCase().includes(searchValue) ||\r\n                phone.includes(search)\r\n             ) && genderChecklist[gender ?? 'genderless'];\r\n        });\r\n\r\n        setFilteredContacts(result);\r\n    }, [search, genderChecklist]);\r\n\r\n    const handleSearchChange = (e) => setSearch(e.target.value);\r\n\r\n    return(\r\n        <div className=\"contacts-phone\">\r\n            <div className=\"contacts-header\">\r\n                <p className=\"contacts-groups\">Groups</p>\r\n                <p className=\"contacts-heading\">Contacts</p>\r\n                < FontAwesomeIcon icon={faPlus} color=\"blue\"/>\r\n            </div>\r\n\r\n            <input\r\n                className=\"search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Search\" \r\n                value={search}\r\n                onChange={handleSearchChange}\r\n            ></input>\r\n\r\n            <label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    name=\"male\"\r\n                    checked={genderChecklist['male']}\r\n                    onChange={() => handleGenderChecklistUpdate('male')}\r\n                    ></input>\r\n                male\r\n            </label>\r\n\r\n            <label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    name=\"female\"\r\n                    checked={genderChecklist['female']}\r\n                    onChange={() => handleGenderChecklistUpdate('female')}\r\n                ></input>\r\n                female\r\n            </label>\r\n\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"genderless\"\r\n                    checked={genderChecklist['genderless']}\r\n                    onChange={() => handleGenderChecklistUpdate('genderless')}\r\n                ></input>\r\n                genderless\r\n            </label>\r\n\r\n            <ul className=\"contacts-list\">\r\n                {filteredContacts.map(contact => <Contact {...contact} />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import Contacts from './Contacts/Contacts';\nimport './App.css';\n\nfunction App() {\n  return (\n    < Contacts />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}